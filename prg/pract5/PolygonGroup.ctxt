#BlueJ class context
comment0.target=PolygonGroup
comment0.text=\n\ Clase\ PolygonGroup.\ Grupo\ de\ poligonos\ en\ el\ plano.\n\ Los\ poligonos\ estan\ en\ orden\ segun\ la\ secuencia\ en\ que\ se\ a\u00F1aden\n\ al\ grupo,\ de\ manera\ que\ se\ considera\ que\ cada\ poligono\ esta\ mas\ \n\ arriba\ en\ el\ grupo\ que\ los\ poligonos\ anteriores,\ o\ dicho\ de\ otro\ \n\ modo,\ se\ superpone\ a\ los\ anteriores.\ \n\ Se\ supone\ que\ el\ orden\ del\ grupo\ da\ la\ secuencia\ en\ que\ se\ dibujan\n\ los\ poligonos,\ de\ manera\ que\ cada\ uno\ se\ dibuja\ por\ encima\ de\ los\n\ anteriores,\ superponiendose\ a\ aquellos\ con\ los\ que\ solape.\n\ 4r3T\n\ Ademas\ de\ a\u00F1adir\ poligonos\ al\ grupo,\ se\ puede\ seleccionar\ un\ poligono\n\ para\ eliminarlo,\ para\ trasladar\ sus\ coordenadas\ en\ el\ plano,\ o\ para\n\ cambiar\ su\ posicion\ relativa\ en\ el\ grupo\:\ llevarlo\ al\ frente\ (arriba\ \n\ del\ todo),\ llevarlo\ al\ fondo\ (debajo\ del\ todo),\ ...\n\ \n\ La\ manera\ de\ seleccionar\ el\ poligono\ a\ mover\ en\ el\ grupo,\ es\ dando\ un\n\ punto\ visible\ del\ poligono,\ es\ decir,\ dando\ un\ punto\ que\ no\ pertenezca\n\ a\ los\ poligonos\ que\ aparecen\ superpuestos\ en\ el\ dibujo.\n\n\ @author\ PRG\ -\ Practica\ 5\n\ @version\ Curso\ 2018/19\n
comment1.params=
comment1.target=PolygonGroup()
comment1.text=\n\ Crea\ un\ grupo\ de\ 0\ poligonos.\n
comment2.params=pol
comment2.target=void\ add(Polygon)
comment2.text=\ A\u00F1ade\ al\ grupo,\ arriba\ del\ todo,\ un\ poligono\ dado.\ \n\ \ @param\ pol\ Polygon,\ el\ poligono.\n
comment3.params=
comment3.target=int\ getSize()
comment3.text=\ Devuelve\ el\ numero\ de\ poligonos\ del\ grupo,\ \ \n\ \ esto\ es,\ la\ talla\ del\ grupo.\n\ \ return\ int,\ la\ talla.\n
comment4.params=
comment4.target=Polygon[]\ toArray()
comment4.text=\ Devuelve\ un\ array\ con\ la\ secuencia\ de\ poligonos\ del\ grupo,\ \n\ \ por\ orden\ desde\ el\ de\ mas\ abajo\ al\ de\ mas\ arriba.\n\ \ @return\ Polygon[],\ el\ array.\n
comment5.params=p
comment5.target=NodePol[]\ search(Point)
comment5.text=\ Busca\ en\ el\ grupo\ descendentemente,\ de\ mas\ arriba\n\ \ a\ mas\ abajo,\ el\ primer\ poligono\ que\ contiene\ a\ un\ \n\ \ punto\ dado.\ Devuelve\ un\ array\ de\ NodePol\ tal\ que\:\n\ \ -\ la\ componente\ 1\ es\ el\ nodo\ con\ el\ poligono\ que\ contiene\ \n\ \ \ \ a\ p\ (null\ si\ no\ hubiera\ ninguno)\n\ \ -\ la\ componente\ 0\ es\ el\ nodo\ anterior\ (null\ si\ no\ est\u00E1\ definido).\n\ \ @param\ p\ Point,\ el\ punto.\n\ \ @return\ NodePol[],\ el\ array\ resultado.\n
comment6.params=p\ incX\ incY
comment6.target=void\ translate(Point,\ double,\ double)
comment6.text=\ Traslada\ en\ el\ plano\ el\ poligono\ seleccionado\ \n\ \ mediante\ el\ punto\ p.\ Las\ abscisas\ y\ las\ ordenadas\ \n\ \ de\ sus\ vertices\ se\ incrementan\ o\ decrementan\ en\ dos\ \n\ \ valores\ dados.\ El\ metodo\ no\ hace\ nada\ si\ no\ \n\ \ hay\ ningun\ poligono\ que\ contenga\ a\ p.\n\ \ @param\ p\ Point,\ el\ punto.\n\ \ @param\ incX\ double,\ el\ incremento\ o\ decremento\ de\ las\ abscisas.\n\ \ @param\ incY\ double,\ el\ incremento\ o\ decremento\ de\ las\ ordenadas.\n
comment7.params=p
comment7.target=void\ remove(Point)
comment7.text=\ Elimina\ del\ grupo\ el\ poligono\ seleccionado\ \n\ \ mediante\ el\ punto\ p.\ El\ metodo\ no\ hace\ nada\ si\ no\ \n\ \ hay\ ningun\ poligono\ que\ contenga\ a\ p.\n\ \ @param\ p\ Point,\ el\ punto.\n
comment8.params=p
comment8.target=void\ toFront(Point)
comment8.text=\ Situa\ al\ frente\ del\ grupo\ el\ poligono\ seleccionado\ \n\ \ mediante\ el\ punto\ p.\ El\ metodo\ no\ hace\ nada\ si\ no\ \n\ \ hay\ ningun\ poligono\ que\ contenga\ a\ p.\n\ \ @param\ p\ Point,\ el\ punto.\n
comment9.params=p
comment9.target=void\ toBack(Point)
comment9.text=\ Situa\ al\ fondo\ del\ grupo\ el\ poligono\ seleccionado\ \n\ \ mediante\ el\ punto\ p.\ El\ metodo\ no\ hace\ nada\ si\ no\ \n\ \ hay\ ningune\ poligono\ que\ contenga\ a\ p.\n\ \ @param\ p\ eePoint,\ el\ punto.\n
numComments=10
